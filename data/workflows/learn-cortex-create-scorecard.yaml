name: Learn Cortex - create Scorecard
tag: learn-cortex-create-scorecard
description: Create a scorecard for use in the Learn Cortex series
isDraft: false
filter:
  entityFilter:
    typeFilter:
      types:
      - service
    entityGroupFilter:
      entityGroups:
      - learn-cortex
      excludedEntityGroups: []
  ownershipScope: ALL
  type: ENTITY
runResponseTemplate: |-
  Successfully created new scorecard.

  Next steps:
  - Navigate to Scorecards -> "your scorecard"
  - Add content to the failure message markdown in the single rule in the scorecard.
  - When adding images, use a tool like Zight that will capture the image and save the file as a URL to make it easy to add to the markdown.
  - Once complete, run the Learn Cortex - publish Scorecard workflow to publish the scorecard in git.  This will allow other users to use it.
actions:
- name: User input
  slug: user-input
  schema:
    inputs:
    - name: Topic
      description: A short topic for this Learn Cortex topic.
      key: topic
      required: true
      defaultValue: null
      placeholder: null
      validationRegex: null
      type: INPUT_FIELD
    - name: Description
      description: The description for the scorecard.
      key: description
      required: true
      defaultValue: null
      placeholder: null
      validationRegex: null
      type: INPUT_FIELD
    inputOverrides: []
    type: USER_INPUT
  outgoingActions:
  - data-transformation
  isRootAction: true
- name: Data transformation
  slug: data-transformation
  schema:
    expression: .actions."user-input".outputs.topic | ascii_downcase | gsub(" "; "-")
    type: JQ
  outgoingActions:
  - http-request
  isRootAction: false
- name: HTTP request
  slug: http-request
  schema:
    headers:
      Content-Type: application/yaml;charset=UTF-8
      Authorization: "Bearer {{context.secrets.cortex_api_key}}"
    httpMethod: POST
    payload: "tag: learn-{{actions.data-transformation.outputs.result}}\nname: Learn\
      \ {{actions.user-input.outputs.topic}}\ndescription: |\n  Cortex Learn series:\
      \ {{actions.user-input.outputs.description}}\ndraft: false\nnotifications:\n\
      \  enabled: false\n  scoreDropNotificationsEnabled: false\nexemptions:\n  enabled:\
      \ false\n  autoApprove: false\nevaluation:\n  window: 168\nladder:\n  name:\
      \ Default Ladder\n  levels:\n  - name: Unwritten\n    rank: 1\n    color: \"\
      #D7AC58\"\n  - name: Completed\n    rank: 2\n    color: \"#7CCB92\"\nrules:\n\
      - title: Learned\n  expression: custom(\"learned\") != null\n  weight: 1\n \
      \ level: Completed\n  failureMessage: |\n    # About\n    Describe what the\
      \ scorecard does.\n\n    # Set up\n    Refer to any existing documentation at\
      \ https://cortex.io/docs and describe any third party software setup.\n\n\n\
      \    # Related Cortex Academy courses\n    List any related courses available\
      \ at academy.cortex.io.\n\n    # Task\n    Describe the steps to complete the\
      \ task here.\n    \n\n    # CQL Rule\n    Explain what the CQL checks.\nfilter:\n\
      \  kind: GENERIC\n  groups:\n    include:\n    - learn-cortex"
    url: https://api.getcortexapp.com/api/v1/scorecards/descriptor
    type: HTTP_REQUEST
  outgoingActions: []
  isRootAction: false
runRestrictionPolicies: []
iconTag: Airplane

